// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: src/proto/grpc/reflection/v1/reflection.proto

#ifndef GRPC_MOCK_src_2fproto_2fgrpc_2freflection_2fv1_2freflection_2eproto__INCLUDED
#define GRPC_MOCK_src_2fproto_2fgrpc_2freflection_2fv1_2freflection_2eproto__INCLUDED

#include "src/proto/grpc/reflection/v1/reflection.pb.h"
#include "src/proto/grpc/reflection/v1/reflection.grpc.pb.h"

#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/sync_stream.h>
#include <gmock/gmock.h>
namespace grpc {
namespace reflection {
namespace v1 {

class MockServerReflectionStub : public ServerReflection::StubInterface {
 public:
  MOCK_METHOD1(ServerReflectionInfoRaw, ::grpc::ClientReaderWriterInterface< ::grpc::reflection::v1::ServerReflectionRequest, ::grpc::reflection::v1::ServerReflectionResponse>*(::grpc::ClientContext* context));
  MOCK_METHOD3(AsyncServerReflectionInfoRaw, ::grpc::ClientAsyncReaderWriterInterface<::grpc::reflection::v1::ServerReflectionRequest, ::grpc::reflection::v1::ServerReflectionResponse>*(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag));
  MOCK_METHOD2(PrepareAsyncServerReflectionInfoRaw, ::grpc::ClientAsyncReaderWriterInterface<::grpc::reflection::v1::ServerReflectionRequest, ::grpc::reflection::v1::ServerReflectionResponse>*(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq));
};

}  // namespace v1
}  // namespace reflection
}  // namespace grpc


#endif  // GRPC_MOCK_src_2fproto_2fgrpc_2freflection_2fv1_2freflection_2eproto__INCLUDED
